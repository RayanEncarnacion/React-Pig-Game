[{"C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\index.js":"1","C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\App.js":"2","C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Board\\Board.js":"3","C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Players\\Player-1.js":"4","C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Dice\\Dice.js":"5","C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Players\\Player-2.js":"6","C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Buttons\\Buttons.js":"7","C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Buttons\\NewGameButton.js":"8","C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Buttons\\HoldButton.js":"9","C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Buttons\\RollButton.js":"10","C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\store\\ContextProvider.js":"11","C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\store\\context-store.js":"12"},{"size":142,"mtime":1616592305000,"results":"13","hashOfConfig":"14"},{"size":246,"mtime":1639006415513,"results":"15","hashOfConfig":"14"},{"size":689,"mtime":1639003074595,"results":"16","hashOfConfig":"14"},{"size":788,"mtime":1639004794976,"results":"17","hashOfConfig":"14"},{"size":974,"mtime":1639007264903,"results":"18","hashOfConfig":"14"},{"size":788,"mtime":1639004781490,"results":"19","hashOfConfig":"14"},{"size":546,"mtime":1639006558644,"results":"20","hashOfConfig":"14"},{"size":217,"mtime":1639006171249,"results":"21","hashOfConfig":"14"},{"size":219,"mtime":1639005670784,"results":"22","hashOfConfig":"14"},{"size":186,"mtime":1639002752081,"results":"23","hashOfConfig":"14"},{"size":3720,"mtime":1639009378845,"results":"24","hashOfConfig":"14"},{"size":415,"mtime":1639007909203,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7hrd0i",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\index.js",[],"C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\App.js",[],"C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Board\\Board.js",[],["52","53"],"C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Players\\Player-1.js",[],"C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Dice\\Dice.js",[],"C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Players\\Player-2.js",[],"C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Buttons\\Buttons.js",[],"C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Buttons\\NewGameButton.js",[],"C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Buttons\\HoldButton.js",[],"C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\components\\Buttons\\RollButton.js",[],"C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\store\\ContextProvider.js",["54","55"],"import { useEffect, useMemo, useState } from \"react\";\r\nimport GameContext from \"./context-store\";\r\n\r\nconst ContextProvider = (props) => {\r\n  const [playing, setPlaying] = useState(true);\r\n  const [diceNumber, setDiceNumber] = useState(null);\r\n  const [activePlayer, setActivePlayer] = useState(1);\r\n  const [player1Score, setPlayer1Score] = useState({ current: 0, total: 0 });\r\n  const [player2Score, setPlayer2Score] = useState({ current: 0, total: 0 });\r\n  const [winner, setWinner] = useState(null);\r\n  const [restarting, setRestarting] = useState(false);\r\n\r\n  const setTotalScore = (playerNumber, diceNumber) => {\r\n    if (playerNumber === 1) {\r\n      setPlayer1Score((prevState) => {\r\n        const previousState = { ...prevState };\r\n        previousState.total += previousState.current;\r\n        previousState.current = 0;\r\n        setActivePlayer((prevState) => (prevState === 1 ? 2 : 1));\r\n        return previousState;\r\n      });\r\n    } else {\r\n      setPlayer2Score((prevState) => {\r\n        const previousState = { ...prevState };\r\n        previousState.total += previousState.current;\r\n        previousState.current = 0;\r\n        setActivePlayer((prevState) => (prevState === 1 ? 2 : 1));\r\n        return previousState;\r\n      });\r\n    }\r\n  };\r\n\r\n  const setCurrentScore = (playerNumber, diceNumber) => {\r\n    if (playerNumber === 1) {\r\n      setPlayer1Score((prevState) => {\r\n        const previousState = { ...prevState };\r\n        previousState.current = previousState.current + diceNumber;\r\n        return previousState;\r\n      });\r\n    } else {\r\n      setPlayer2Score((prevState) => {\r\n        const previousState = { ...prevState };\r\n        previousState.current = previousState.current + diceNumber;\r\n        return previousState;\r\n      });\r\n    }\r\n  };\r\n\r\n  const rollDiceHandler = () => {\r\n    if (!playing) return;\r\n\r\n    const diceNumber = Math.floor(Math.random() * 6);\r\n    setDiceNumber(diceNumber);\r\n    setCurrentScore(activePlayer, diceNumber);\r\n\r\n    if (diceNumber === 0) {\r\n      setTotalScore(activePlayer, diceNumber);\r\n    }\r\n  };\r\n\r\n  const holdDiceHandler = () => {\r\n    if (!playing) return;\r\n\r\n    setTotalScore(activePlayer);\r\n  };\r\n\r\n  const checkIfCanBeRestarted = () => {\r\n    if (\r\n      player1Score.current === 0 &&\r\n      player2Score.current === 0 &&\r\n      player1Score.total === 0 &&\r\n      player2Score.total === 0\r\n    ) {\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  const restartHandler = () => {\r\n    if (!playing) return;\r\n\r\n    const canBeRestarted = checkIfCanBeRestarted();\r\n\r\n    if (!canBeRestarted) {\r\n      console.log(\"Can not be restarted!\");\r\n      return;\r\n    }\r\n\r\n    setActivePlayer(\"\");\r\n    setRestarting(true);\r\n    setPlaying(false);\r\n\r\n    setTimeout(() => {\r\n      setDiceNumber(null);\r\n      setActivePlayer(1);\r\n      setPlayer1Score({ current: 0, total: 0 });\r\n      setPlayer2Score({ current: 0, total: 0 });\r\n      setWinner(null);\r\n      setRestarting(false);\r\n      setPlaying(true);\r\n    }, 2000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (player1Score.current >= 20 || player1Score.total >= 20) {\r\n      setWinner(1);\r\n      restartHandler();\r\n    }\r\n    if (player2Score.current >= 20 || player2Score.total >= 20) {\r\n      setWinner(2);\r\n      restartHandler();\r\n    }\r\n  }, [player1Score, player2Score]);\r\n\r\n  const context = {\r\n    playing,\r\n    activePlayer,\r\n    diceNumber,\r\n    player1: player1Score,\r\n    player2: player2Score,\r\n    winner,\r\n    restarting,\r\n    rollDice: rollDiceHandler,\r\n    holdPoints: holdDiceHandler,\r\n    restart: restartHandler,\r\n  };\r\n\r\n  return (\r\n    <GameContext.Provider value={context}>\r\n      {props.children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContextProvider;\r\n","C:\\Users\\Rayan\\Desktop\\React Pig Game\\src\\store\\context-store.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":21,"nodeType":"62","messageId":"63","endLine":1,"endColumn":28},{"ruleId":"64","severity":1,"message":"65","line":112,"column":6,"nodeType":"66","endLine":112,"endColumn":34,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'restartHandler'. Either include it or remove the dependency array.","ArrayExpression",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [player1Score, player2Score, restartHandler]",{"range":"73","text":"74"},[3271,3299],"[player1Score, player2Score, restartHandler]"]